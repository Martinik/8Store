<script>

    //Set up some of our variables.
    let map; //Will contain map object.
    let marker = false; ////Has the user plotted their location marker?
    let cityCircle = false;

    //Function called to initialize / create the map.
    //This is called when the page has loaded.
    function initMap() {
        console.log("initMap");
        //The center location of our map.
        let centerOfMap = new google.maps.LatLng(52.357971, -6.516758);

        //Map options.
        let options = {
            center: centerOfMap, //Set center.
            zoom: 7 //The zoom value.
        };

        //Create the map object.
        map = new google.maps.Map(document.getElementById('map'), options);

        //Listen for any clicks on the map.
        google.maps.event.addListener(map, 'click', function(event) {
            //Get the location that the user clicked.
            let clickedLocation = event.latLng;
            //If the marker hasn't been added.
            if(marker === false){
                //Create the marker.
                marker = new google.maps.Marker({
                    position: clickedLocation,
                    map: map,
                    draggable: true //make it draggable
                });
                cityCircle = new google.maps.Circle({
                    strokeColor: '#FF0000',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#FF0000',
                    fillOpacity: 0.35,
                    map: map,
                    center: clickedLocation,
                    radius: 1000,
                    draggable: true,
                    editable: true
                });
                //Listen for drag events!
                google.maps.event.addListener(marker, 'dragend', function(event){
                    markerLocation();
                });
                google.maps.event.addListener(cityCircle, 'dragend', function(event){
                    markerLocation();
                });
                google.maps.event.addListener(cityCircle, 'radius_changed', function(event){
                    markerLocation();
                });

                google.maps.event.addListener(marker, 'drag', function(event){
                    cityCircle.setCenter(marker.getPosition());
                });
                google.maps.event.addListener(cityCircle, 'drag', function(event){
                    marker.setPosition(cityCircle.getCenter());
                });

            } else{
                //Marker has already been added, so just change its location.
                marker.setPosition(clickedLocation);
                cityCircle.setCenter(clickedLocation);
            }
            //Get the marker's location.
            markerLocation();
        });
    }

    //This function will get the marker's current location and then add the lat/long
    //values to our textfields so that we can save the location.
    function markerLocation(){
        //Get location.
        let currentLocation = marker.getPosition();
        //Get radius.
        let currentRadius = cityCircle.getRadius();
        //Add lat and lng values to a field that we can save.
        document.getElementById('lat').value = currentLocation.lat(); //latitude
        document.getElementById('lng').value = currentLocation.lng(); //longitude
        document.getElementById('rad').value = currentRadius; //longitude
    }


    //Load the map when the page has finished loading.
    google.maps.event.addDomListener(window, 'load', initMap);
    console.log("load map")

    (function () {
        let dropzone = $(".dropzone");

        function handleFiles(files) {
            let oldImage = $(".posterImage");
            let file = files[0];
            let imageType = /^image\//;

            if (imageType.test(file.type)) {
                oldImage.remove();
                let img = document.createElement("img");
                img.classList.add("posterImage");
                img.file = file;
                dropzone.append(img); // Assuming that "preview" is the div output where the content will be displayed.

                let reader = new FileReader();
                reader.onload = (function(aImg) {
                    return function(e) {
                        aImg.src = e.target.result;
                    };
                })(img);
                reader.readAsDataURL(file);
            }
        }

        dropzone.on("drop", function (event) {
            event.preventDefault();
            this.className = 'dropzone';
            let files = event.originalEvent.dataTransfer.files;
            handleFiles(files);
        });

        dropzone.on("dragover", function () {
            this.className = 'dropzone dragover';
            return false;
        });

        dropzone.on("dragleave", function () {
            this.className = 'dropzone';
            return false;
        });
    })();
</script>